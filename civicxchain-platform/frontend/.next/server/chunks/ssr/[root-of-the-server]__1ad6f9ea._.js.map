{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimberleycheung/CiviXchain/civicxchain-platform/frontend/app/components/CommitmentDashboard.tsx"],"sourcesContent":["/*'use client';\n\nimport { useState, useEffect } from 'react';\n\n// Types (you can import these from your main file or create a shared types file)\ninterface Commitment {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  current_progress: number;\n  deadline: string;\n  status: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n  created_at: string;\n  satellite_verified: boolean;\n}\n\ninterface CommitmentDashboardProps {\n  commitments: Commitment[];\n  onUpdateProgress: (commitmentId: string, newProgress: number) => void;\n  onClaimReward: (commitmentId: string) => void;\n}\n\nexport default function CommitmentDashboard({ \n  commitments, \n  onUpdateProgress, \n  onClaimReward \n}: CommitmentDashboardProps) {\n  const [selectedCommitment, setSelectedCommitment] = useState<Commitment | null>(null);\n  const [progressUpdate, setProgressUpdate] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n\n  // Filter commitments based on status and category\n  const filteredCommitments = commitments.filter(commitment => {\n    const statusMatch = filterStatus === 'all' || commitment.status === filterStatus;\n    const categoryMatch = filterCategory === 'all' || commitment.category === filterCategory;\n    return statusMatch && categoryMatch;\n  });\n\n  // Calculate dashboard statistics\n  const dashboardStats = {\n    total: commitments.length,\n    active: commitments.filter(c => c.status === 'active').length,\n    completed: commitments.filter(c => c.status === 'completed').length,\n    overdue: commitments.filter(c => \n      c.status === 'active' && new Date(c.deadline) < new Date()\n    ).length,\n    totalStaked: commitments.reduce((sum, c) => sum + c.stake_amount, 0),\n    satelliteVerified: commitments.filter(c => c.satellite_verified).length\n  };\n\n  const getCategoryIcon = (category: string) => {\n    const icons: { [key: string]: string } = {\n      'forest_protection': 'üå≥',\n      'air_quality': 'üè≠',\n      'water_management': 'üíß',\n      'biodiversity': 'ü¶ã',\n      'waste_reduction': '‚ôªÔ∏è'\n    };\n    return icons[category] || 'üåç';\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'from-green-500 to-emerald-500';\n      case 'completed': return 'from-blue-500 to-cyan-500';\n      case 'failed': return 'from-red-500 to-pink-500';\n      default: return 'from-gray-500 to-slate-500';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const calculateProgress = (current: number, target: number) => {\n    return Math.min((current / target) * 100, 100);\n  };\n\n  const isOverdue = (deadline: string, status: string) => {\n    return status === 'active' && new Date(deadline) < new Date();\n  };\n\n  const handleProgressUpdate = (commitmentId: string) => {\n    const newProgress = parseFloat(progressUpdate);\n    if (newProgress >= 0 && newProgress <= 100) {\n      onUpdateProgress(commitmentId, newProgress);\n      setProgressUpdate('');\n      setSelectedCommitment(null);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Dashboard Header *\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-2 flex items-center\">\n            <span className=\"w-12 h-12 bg-gradient-to-r from-cyan-400 to-purple-400 rounded-xl flex items-center justify-center mr-4\">\n              üìä\n            </span>\n            Commitment Dashboard\n          </h1>\n          <p className=\"text-gray-300\">Monitor and manage your environmental commitments</p>\n        </div>\n\n        {/* Dashboard Statistics *\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-8\">\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-4\">\n            <div className=\"text-cyan-400 text-sm font-medium\">Total Commitments</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.total}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-green-500/20 p-4\">\n            <div className=\"text-green-400 text-sm font-medium\">Active</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.active}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-blue-500/20 p-4\">\n            <div className=\"text-blue-400 text-sm font-medium\">Completed</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.completed}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-red-500/20 p-4\">\n            <div className=\"text-red-400 text-sm font-medium\">Overdue</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.overdue}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-yellow-500/20 p-4\">\n            <div className=\"text-yellow-400 text-sm font-medium\">Total Staked</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.totalStaked.toFixed(2)} ETH</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-purple-500/20 p-4\">\n            <div className=\"text-purple-400 text-sm font-medium\">Satellite Verified</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.satelliteVerified}</div>\n          </div>\n        </div>\n\n        {/* Filters *\n        <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-gray-500/20 p-6 mb-8\">\n          <h2 className=\"text-xl font-semibold text-white mb-4\">Filters</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-gray-300 text-sm font-medium mb-2\">Status</label>\n              <select \n                value={filterStatus}\n                onChange={(e) => setFilterStatus(e.target.value)}\n                className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n              >\n                <option value=\"all\">All Statuses</option>\n                <option value=\"active\">Active</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"failed\">Failed</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-gray-300 text-sm font-medium mb-2\">Category</label>\n              <select \n                value={filterCategory}\n                onChange={(e) => setFilterCategory(e.target.value)}\n                className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n              >\n                <option value=\"all\">All Categories</option>\n                <option value=\"forest_protection\">üå≥ Forest Protection</option>\n                <option value=\"air_quality\">üè≠ Air Quality</option>\n                <option value=\"water_management\">üíß Water Management</option>\n                <option value=\"biodiversity\">ü¶ã Biodiversity</option>\n                <option value=\"waste_reduction\">‚ôªÔ∏è Waste Reduction</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Commitments Grid *\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n          {filteredCommitments.map((commitment) => (\n            <div key={commitment.id} className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-blue-500/20 p-6 hover:border-blue-500/40 transition-all duration-300 shadow-xl\">\n              {/* Commitment Header *\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg flex items-center justify-center mr-3\">\n                    <span className=\"text-white text-lg\">\n                      {getCategoryIcon(commitment.category)}\n                    </span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-white font-semibold text-sm\">{commitment.official_name}</h3>\n                    <p className=\"text-gray-400 text-xs\">{commitment.official_role}</p>\n                  </div>\n                </div>\n                <div className={`px-2 py-1 rounded-full text-xs font-semibold bg-gradient-to-r ${getStatusColor(commitment.status)} text-white`}>\n                  {commitment.status.toUpperCase()}\n                </div>\n              </div>\n\n              {/* Commitment Title *\n              <h4 className=\"text-white font-semibold mb-2 line-clamp-2\">{commitment.title}</h4>\n\n              {/* Progress Section *\n              <div className=\"mb-4\">\n                <div className=\"flex justify-between text-sm text-gray-300 mb-2\">\n                  <span>Progress</span>\n                  <span className=\"font-mono\">\n                    {commitment.current_progress}% / {commitment.target_value}%\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-3 overflow-hidden\">\n                  <div \n                    className={`bg-gradient-to-r ${getStatusColor(commitment.status)} h-3 rounded-full transition-all duration-1000`} \n                    style={{width: `${calculateProgress(commitment.current_progress, commitment.target_value)}%`}}\n                  ></div>\n                </div>\n              </div>\n\n              {/* Commitment Details *\n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Deadline:</span>\n                  <span className={`${isOverdue(commitment.deadline, commitment.status) ? 'text-red-400' : 'text-gray-300'}`}>\n                    {formatDate(commitment.deadline)}\n                    {isOverdue(commitment.deadline, commitment.status) && ' ‚ö†Ô∏è'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Stake:</span>\n                  <span className=\"text-gray-300\">{commitment.stake_amount} ETH</span>\n                </div>\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Verification:</span>\n                  <span className={commitment.satellite_verified ? 'text-green-400' : 'text-yellow-400'}>\n                    {commitment.satellite_verified ? 'üõ∞Ô∏è Satellite' : 'üìä Self-reported'}\n                  </span>\n                </div>\n              </div>\n\n              {/* Action Buttons *\n              <div className=\"flex space-x-2\">\n                {commitment.status === 'active' && (\n                  <button \n                    onClick={() => setSelectedCommitment(commitment)}\n                    className=\"flex-1 bg-blue-500/20 hover:bg-blue-500/30 border border-blue-500/50 text-blue-400 px-3 py-2 rounded-lg text-sm transition-all duration-300\"\n                  >\n                    Update Progress\n                  </button>\n                )}\n                {commitment.status === 'completed' && (\n                  <button \n                    onClick={() => onClaimReward(commitment.id)}\n                    className=\"flex-1 bg-green-500/20 hover:bg-green-500/30 border border-green-500/50 text-green-400 px-3 py-2 rounded-lg text-sm transition-all duration-300\"\n                  >\n                    Claim Reward\n                  </button>\n                )}\n                <button className=\"bg-gray-500/20 hover:bg-gray-500/30 border border-gray-500/50 text-gray-400 px-3 py-2 rounded-lg text-sm transition-all duration-300\">\n                  Details\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* No commitments message *\n        {filteredCommitments.length === 0 && (\n          <div className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-gray-500/20 p-12 text-center\">\n            <div className=\"text-6xl mb-4\">üîç</div>\n            <h3 className=\"text-white text-xl mb-2\">No commitments found</h3>\n            <p className=\"text-gray-400\">Try adjusting your filters or create a new commitment.</p>\n          </div>\n        )}\n\n        {/* Progress Update Modal *\n        {selectedCommitment && (\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-black/80 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-6 max-w-md w-full\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Update Progress</h3>\n              <p className=\"text-gray-300 mb-4\">\n                Updating progress for: <span className=\"text-cyan-400\">{selectedCommitment.title}</span>\n              </p>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-300 text-sm font-medium mb-2\">\n                  New Progress (Current: {selectedCommitment.current_progress}%)\n                </label>\n                <input\n                  type=\"number\"\n                  value={progressUpdate}\n                  onChange={(e) => setProgressUpdate(e.target.value)}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"Enter new progress percentage\"\n                  className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:border-cyan-400\"\n                />\n              </div>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => handleProgressUpdate(selectedCommitment.id)}\n                  className=\"flex-1 bg-cyan-500/20 hover:bg-cyan-500/30 border border-cyan-500/50 text-cyan-400 px-4 py-2 rounded-lg transition-all duration-300\"\n                >\n                  Update\n                </button>\n                <button\n                  onClick={() => {\n                    setSelectedCommitment(null);\n                    setProgressUpdate('');\n                  }}\n                  className=\"flex-1 bg-gray-500/20 hover:bg-gray-500/30 border border-gray-500/50 text-gray-400 px-4 py-2 rounded-lg transition-all duration-300\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}*/\n'use client';\n\nimport { useState, useEffect } from 'react';\n\n// Types (you can import these from your main file or create a shared types file)\ninterface Commitment {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  current_progress: number;\n  deadline: string;\n  status: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n  created_at: string;\n  satellite_verified: boolean;\n}\n\ninterface CommitmentDashboardProps {\n  commitments: Commitment[];\n  onUpdateProgress: (commitmentId: string, newProgress: number) => void;\n  onClaimReward: (commitmentId: string) => void;\n  onRefreshData?: () => Promise<void>; // New prop for refresh function\n}\n\nexport default function CommitmentDashboard({ \n  commitments, \n  onUpdateProgress, \n  onClaimReward,\n  onRefreshData\n}: CommitmentDashboardProps) {\n  const [selectedCommitment, setSelectedCommitment] = useState<Commitment | null>(null);\n  const [progressUpdate, setProgressUpdate] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  \n  // Real-time update states\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Auto-refresh data every 30 seconds\n  useEffect(() => {\n    if (!autoRefresh) return;\n\n    const interval = setInterval(() => {\n      fetchCommitments();\n    }, 30000); // 30 seconds\n\n    return () => clearInterval(interval);\n  }, [autoRefresh]);\n\n  // Function to fetch fresh commitment data\n  const fetchCommitments = async () => {\n    try {\n      setIsRefreshing(true);\n      console.log('Refreshing commitment data...');\n      \n      // Call the refresh function passed from parent component\n      if (onRefreshData) {\n        await onRefreshData();\n      }\n      \n      // Update last refresh time\n      setLastUpdated(new Date());\n      \n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Manual refresh function\n  const handleManualRefresh = () => {\n    fetchCommitments();\n  };\n\n  // Filter commitments based on status and category\n  const filteredCommitments = commitments.filter(commitment => {\n    const statusMatch = filterStatus === 'all' || commitment.status === filterStatus;\n    const categoryMatch = filterCategory === 'all' || commitment.category === filterCategory;\n    return statusMatch && categoryMatch;\n  });\n\n  // Calculate dashboard statistics\n  const dashboardStats = {\n    total: commitments.length,\n    active: commitments.filter(c => c.status === 'active').length,\n    completed: commitments.filter(c => c.status === 'completed').length,\n    overdue: commitments.filter(c => \n      c.status === 'active' && new Date(c.deadline) < new Date()\n    ).length,\n    totalStaked: commitments.reduce((sum, c) => sum + c.stake_amount, 0),\n    satelliteVerified: commitments.filter(c => c.satellite_verified).length\n  };\n\n  const getCategoryIcon = (category: string) => {\n    const icons: { [key: string]: string } = {\n      'forest_protection': 'üå≥',\n      'air_quality': 'üè≠',\n      'water_management': 'üíß',\n      'biodiversity': 'ü¶ã',\n      'waste_reduction': '‚ôªÔ∏è'\n    };\n    return icons[category] || 'üåç';\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'from-green-500 to-emerald-500';\n      case 'completed': return 'from-blue-500 to-cyan-500';\n      case 'failed': return 'from-red-500 to-pink-500';\n      default: return 'from-gray-500 to-slate-500';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const calculateProgress = (current: number, target: number) => {\n    return Math.min((current / target) * 100, 100);\n  };\n\n  const isOverdue = (deadline: string, status: string) => {\n    return status === 'active' && new Date(deadline) < new Date();\n  };\n\n  const handleProgressUpdate = (commitmentId: string) => {\n    const newProgress = parseFloat(progressUpdate);\n    if (newProgress >= 0 && newProgress <= 100) {\n      onUpdateProgress(commitmentId, newProgress);\n      setProgressUpdate('');\n      setSelectedCommitment(null);\n      // Refresh data after update\n      setTimeout(() => fetchCommitments(), 1000);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Dashboard Header with Real-time Controls */}\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n            <div>\n              <h1 className=\"text-4xl font-bold text-white mb-2 flex items-center\">\n                <span className=\"w-12 h-12 bg-gradient-to-r from-cyan-400 to-purple-400 rounded-xl flex items-center justify-center mr-4\">\n                  üìä\n                </span>\n                Commitment Dashboard\n              </h1>\n              <p className=\"text-gray-300\">Monitor and manage your environmental commitments</p>\n            </div>\n            \n            {/* Real-time Controls */}\n            <div className=\"mt-4 md:mt-0 flex flex-col items-end space-y-2\">\n              <div className=\"flex items-center space-x-4\">\n                {/* Auto-refresh toggle */}\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gray-300 text-sm\">Auto-refresh</span>\n                  <button\n                    onClick={() => setAutoRefresh(!autoRefresh)}\n                    className={`w-12 h-6 rounded-full transition-all duration-300 ${\n                      autoRefresh ? 'bg-green-500' : 'bg-gray-600'\n                    }`}\n                  >\n                    <div className={`w-5 h-5 bg-white rounded-full transition-transform duration-300 ${\n                      autoRefresh ? 'translate-x-6' : 'translate-x-0.5'\n                    }`}></div>\n                  </button>\n                </div>\n                \n                {/* Manual refresh button */}\n                <button\n                  onClick={handleManualRefresh}\n                  disabled={isRefreshing}\n                  className=\"bg-cyan-500/20 hover:bg-cyan-500/30 border border-cyan-500/50 text-cyan-400 px-4 py-2 rounded-lg text-sm transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n                >\n                  <div className={`w-4 h-4 border-2 border-cyan-400 border-t-transparent rounded-full ${\n                    isRefreshing ? 'animate-spin' : ''\n                  }`}></div>\n                  <span>{isRefreshing ? 'Refreshing...' : 'Refresh'}</span>\n                </button>\n              </div>\n              \n              {/* Last updated indicator */}\n              <div className=\"text-xs text-gray-400\">\n                Last updated: {formatTime(lastUpdated)}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Real-time Update Indicator */}\n        {isRefreshing && (\n          <div className=\"mb-6 bg-black/30 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-4\">\n            <div className=\"flex items-center gap-3 text-cyan-400\">\n              <div className=\"animate-spin h-5 w-5 border-2 border-cyan-400 border-t-transparent rounded-full\"></div>\n              <span className=\"font-medium\">Updating commitment data...</span>\n              <div className=\"flex space-x-1\">\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\"></div>\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\" style={{animationDelay: '0.2s'}}></div>\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\" style={{animationDelay: '0.4s'}}></div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Dashboard Statistics */}\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-8\">\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-4 relative overflow-hidden\">\n            {isRefreshing && <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-cyan-400 to-purple-400 animate-pulse\"></div>}\n            <div className=\"text-cyan-400 text-sm font-medium\">Total Commitments</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.total}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-green-500/20 p-4 relative overflow-hidden\">\n            {isRefreshing && <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-green-400 to-emerald-400 animate-pulse\"></div>}\n            <div className=\"text-green-400 text-sm font-medium\">Active</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.active}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-blue-500/20 p-4 relative overflow-hidden\">\n            {isRefreshing && <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-400 to-cyan-400 animate-pulse\"></div>}\n            <div className=\"text-blue-400 text-sm font-medium\">Completed</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.completed}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-red-500/20 p-4 relative overflow-hidden\">\n            {isRefreshing && <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-red-400 to-pink-400 animate-pulse\"></div>}\n            <div className=\"text-red-400 text-sm font-medium\">Overdue</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.overdue}</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-yellow-500/20 p-4 relative overflow-hidden\">\n            {isRefreshing && <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-yellow-400 to-orange-400 animate-pulse\"></div>}\n            <div className=\"text-yellow-400 text-sm font-medium\">Total Staked</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.totalStaked.toFixed(2)} ETH</div>\n          </div>\n          <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-purple-500/20 p-4 relative overflow-hidden\">\n            {isRefreshing && <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-purple-400 to-pink-400 animate-pulse\"></div>}\n            <div className=\"text-purple-400 text-sm font-medium\">Satellite Verified</div>\n            <div className=\"text-2xl font-bold text-white\">{dashboardStats.satelliteVerified}</div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-gray-500/20 p-6 mb-8\">\n          <h2 className=\"text-xl font-semibold text-white mb-4\">Filters</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-gray-300 text-sm font-medium mb-2\">Status</label>\n              <select \n                value={filterStatus}\n                onChange={(e) => setFilterStatus(e.target.value)}\n                className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n              >\n                <option value=\"all\">All Statuses</option>\n                <option value=\"active\">Active</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"failed\">Failed</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-gray-300 text-sm font-medium mb-2\">Category</label>\n              <select \n                value={filterCategory}\n                onChange={(e) => setFilterCategory(e.target.value)}\n                className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n              >\n                <option value=\"all\">All Categories</option>\n                <option value=\"forest_protection\">üå≥ Forest Protection</option>\n                <option value=\"air_quality\">üè≠ Air Quality</option>\n                <option value=\"water_management\">üíß Water Management</option>\n                <option value=\"biodiversity\">ü¶ã Biodiversity</option>\n                <option value=\"waste_reduction\">‚ôªÔ∏è Waste Reduction</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Commitments Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n          {filteredCommitments.map((commitment) => (\n            <div key={commitment.id} className={`bg-black/20 backdrop-blur-xl rounded-xl border border-blue-500/20 p-6 hover:border-blue-500/40 transition-all duration-300 shadow-xl relative overflow-hidden ${\n              isRefreshing ? 'animate-pulse' : ''\n            }`}>\n              {/* Real-time update indicator for individual cards */}\n              {isRefreshing && (\n                <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-400 to-cyan-400 animate-pulse\"></div>\n              )}\n              \n              {/* Commitment Header */}\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg flex items-center justify-center mr-3\">\n                    <span className=\"text-white text-lg\">\n                      {getCategoryIcon(commitment.category)}\n                    </span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-white font-semibold text-sm\">{commitment.official_name}</h3>\n                    <p className=\"text-gray-400 text-xs\">{commitment.official_role}</p>\n                  </div>\n                </div>\n                <div className={`px-2 py-1 rounded-full text-xs font-semibold bg-gradient-to-r ${getStatusColor(commitment.status)} text-white flex items-center space-x-1`}>\n                  <span>{commitment.status.toUpperCase()}</span>\n                  {commitment.satellite_verified && <span className=\"text-xs\">üõ∞Ô∏è</span>}\n                </div>\n              </div>\n\n              {/* Commitment Title */}\n              <h4 className=\"text-white font-semibold mb-2 line-clamp-2\">{commitment.title}</h4>\n\n              {/* Progress Section with animated bar */}\n              <div className=\"mb-4\">\n                <div className=\"flex justify-between text-sm text-gray-300 mb-2\">\n                  <span>Progress</span>\n                  <span className=\"font-mono\">\n                    {commitment.current_progress}% / {commitment.target_value}%\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-3 overflow-hidden\">\n                  <div \n                    className={`bg-gradient-to-r ${getStatusColor(commitment.status)} h-3 rounded-full transition-all duration-1000 ${\n                      isRefreshing ? 'animate-pulse' : ''\n                    }`} \n                    style={{width: `${calculateProgress(commitment.current_progress, commitment.target_value)}%`}}\n                  ></div>\n                </div>\n              </div>\n\n              {/* Commitment Details */}\n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Deadline:</span>\n                  <span className={`${isOverdue(commitment.deadline, commitment.status) ? 'text-red-400' : 'text-gray-300'}`}>\n                    {formatDate(commitment.deadline)}\n                    {isOverdue(commitment.deadline, commitment.status) && ' ‚ö†Ô∏è'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Stake:</span>\n                  <span className=\"text-gray-300\">{commitment.stake_amount} ETH</span>\n                </div>\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Verification:</span>\n                  <span className={commitment.satellite_verified ? 'text-green-400' : 'text-yellow-400'}>\n                    {commitment.satellite_verified ? 'üõ∞Ô∏è Satellite' : 'üìä Self-reported'}\n                  </span>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex space-x-2\">\n                {commitment.status === 'active' && (\n                  <button \n                    onClick={() => setSelectedCommitment(commitment)}\n                    className=\"flex-1 bg-blue-500/20 hover:bg-blue-500/30 border border-blue-500/50 text-blue-400 px-3 py-2 rounded-lg text-sm transition-all duration-300\"\n                  >\n                    Update Progress\n                  </button>\n                )}\n                {commitment.status === 'completed' && (\n                  <button \n                    onClick={() => onClaimReward(commitment.id)}\n                    className=\"flex-1 bg-green-500/20 hover:bg-green-500/30 border border-green-500/50 text-green-400 px-3 py-2 rounded-lg text-sm transition-all duration-300\"\n                  >\n                    Claim Reward\n                  </button>\n                )}\n                <button className=\"bg-gray-500/20 hover:bg-gray-500/30 border border-gray-500/50 text-gray-400 px-3 py-2 rounded-lg text-sm transition-all duration-300\">\n                  Details\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* No commitments message */}\n        {filteredCommitments.length === 0 && (\n          <div className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-gray-500/20 p-12 text-center\">\n            <div className=\"text-6xl mb-4\">üîç</div>\n            <h3 className=\"text-white text-xl mb-2\">No commitments found</h3>\n            <p className=\"text-gray-400\">Try adjusting your filters or create a new commitment.</p>\n          </div>\n        )}\n\n        {/* Progress Update Modal */}\n        {selectedCommitment && (\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-black/80 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-6 max-w-md w-full\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Update Progress</h3>\n              <p className=\"text-gray-300 mb-4\">\n                Updating progress for: <span className=\"text-cyan-400\">{selectedCommitment.title}</span>\n              </p>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-300 text-sm font-medium mb-2\">\n                  New Progress (Current: {selectedCommitment.current_progress}%)\n                </label>\n                <input\n                  type=\"number\"\n                  value={progressUpdate}\n                  onChange={(e) => setProgressUpdate(e.target.value)}\n                  min=\"0\"\n                  max=\"100\"\n                  placeholder=\"Enter new progress percentage\"\n                  className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:border-cyan-400\"\n                />\n              </div>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => handleProgressUpdate(selectedCommitment.id)}\n                  className=\"flex-1 bg-cyan-500/20 hover:bg-cyan-500/30 border border-cyan-500/50 text-cyan-400 px-4 py-2 rounded-lg transition-all duration-300\"\n                >\n                  Update\n                </button>\n                <button\n                  onClick={() => {\n                    setSelectedCommitment(null);\n                    setProgressUpdate('');\n                  }}\n                  className=\"flex-1 bg-gray-500/20 hover:bg-gray-500/30 border border-gray-500/50 text-gray-400 px-4 py-2 rounded-lg transition-all duration-300\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgUC;;;;AAGD;AAFA;;;AA4Be,SAAS,oBAAoB,EAC1C,WAAW,EACX,gBAAgB,EAChB,aAAa,EACb,aAAa,EACY;IACzB,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAChF,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE7D,0BAA0B;IAC1B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAQ,IAAI;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,aAAa;QAElB,MAAM,WAAW,YAAY;YAC3B;QACF,GAAG,QAAQ,aAAa;QAExB,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAY;IAEhB,0CAA0C;IAC1C,MAAM,mBAAmB;QACvB,IAAI;YACF,gBAAgB;YAChB,QAAQ,GAAG,CAAC;YAEZ,yDAAyD;YACzD,IAAI,eAAe;gBACjB,MAAM;YACR;YAEA,2BAA2B;YAC3B,eAAe,IAAI;QAErB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,0BAA0B;IAC1B,MAAM,sBAAsB;QAC1B;IACF;IAEA,kDAAkD;IAClD,MAAM,sBAAsB,YAAY,MAAM,CAAC,CAAA;QAC7C,MAAM,cAAc,iBAAiB,SAAS,WAAW,MAAM,KAAK;QACpE,MAAM,gBAAgB,mBAAmB,SAAS,WAAW,QAAQ,KAAK;QAC1E,OAAO,eAAe;IACxB;IAEA,iCAAiC;IACjC,MAAM,iBAAiB;QACrB,OAAO,YAAY,MAAM;QACzB,QAAQ,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,UAAU,MAAM;QAC7D,WAAW,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,aAAa,MAAM;QACnE,SAAS,YAAY,MAAM,CAAC,CAAA,IAC1B,EAAE,MAAM,KAAK,YAAY,IAAI,KAAK,EAAE,QAAQ,IAAI,IAAI,QACpD,MAAM;QACR,aAAa,YAAY,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,YAAY,EAAE;QAClE,mBAAmB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,kBAAkB,EAAE,MAAM;IACzE;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,QAAmC;YACvC,qBAAqB;YACrB,eAAe;YACf,oBAAoB;YACpB,gBAAgB;YAChB,mBAAmB;QACrB;QACA,OAAO,KAAK,CAAC,SAAS,IAAI;IAC5B;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAU,OAAO;YACtB;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;YACtD,MAAM;YACN,OAAO;YACP,KAAK;QACP;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO,KAAK,kBAAkB,CAAC,SAAS;YACtC,MAAM;YACN,QAAQ;YACR,QAAQ;QACV;IACF;IAEA,MAAM,oBAAoB,CAAC,SAAiB;QAC1C,OAAO,KAAK,GAAG,CAAC,AAAC,UAAU,SAAU,KAAK;IAC5C;IAEA,MAAM,YAAY,CAAC,UAAkB;QACnC,OAAO,WAAW,YAAY,IAAI,KAAK,YAAY,IAAI;IACzD;IAEA,MAAM,uBAAuB,CAAC;QAC5B,MAAM,cAAc,WAAW;QAC/B,IAAI,eAAe,KAAK,eAAe,KAAK;YAC1C,iBAAiB,cAAc;YAC/B,kBAAkB;YAClB,sBAAsB;YACtB,4BAA4B;YAC5B,WAAW,IAAM,oBAAoB;QACvC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC;gDAAK,WAAU;0DAA0G;;;;;;4CAEnH;;;;;;;kDAGT,8OAAC;wCAAE,WAAU;kDAAgB;;;;;;;;;;;;0CAI/B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DAEb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEAAwB;;;;;;kEACxC,8OAAC;wDACC,SAAS,IAAM,eAAe,CAAC;wDAC/B,WAAW,CAAC,kDAAkD,EAC5D,cAAc,iBAAiB,eAC/B;kEAEF,cAAA,8OAAC;4DAAI,WAAW,CAAC,gEAAgE,EAC/E,cAAc,kBAAkB,mBAChC;;;;;;;;;;;;;;;;;0DAKN,8OAAC;gDACC,SAAS;gDACT,UAAU;gDACV,WAAU;;kEAEV,8OAAC;wDAAI,WAAW,CAAC,mEAAmE,EAClF,eAAe,iBAAiB,IAChC;;;;;;kEACF,8OAAC;kEAAM,eAAe,kBAAkB;;;;;;;;;;;;;;;;;;kDAK5C,8OAAC;wCAAI,WAAU;;4CAAwB;4CACtB,WAAW;;;;;;;;;;;;;;;;;;;;;;;;gBAOjC,8BACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAK,WAAU;0CAAc;;;;;;0CAC9B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;wCAAiD,OAAO;4CAAC,gBAAgB;wCAAM;;;;;;kDAC9F,8OAAC;wCAAI,WAAU;wCAAiD,OAAO;4CAAC,gBAAgB;wCAAM;;;;;;;;;;;;;;;;;;;;;;;8BAOtG,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;gCACZ,8BAAgB,8OAAC;oCAAI,WAAU;;;;;;8CAChC,8OAAC;oCAAI,WAAU;8CAAoC;;;;;;8CACnD,8OAAC;oCAAI,WAAU;8CAAiC,eAAe,KAAK;;;;;;;;;;;;sCAEtE,8OAAC;4BAAI,WAAU;;gCACZ,8BAAgB,8OAAC;oCAAI,WAAU;;;;;;8CAChC,8OAAC;oCAAI,WAAU;8CAAqC;;;;;;8CACpD,8OAAC;oCAAI,WAAU;8CAAiC,eAAe,MAAM;;;;;;;;;;;;sCAEvE,8OAAC;4BAAI,WAAU;;gCACZ,8BAAgB,8OAAC;oCAAI,WAAU;;;;;;8CAChC,8OAAC;oCAAI,WAAU;8CAAoC;;;;;;8CACnD,8OAAC;oCAAI,WAAU;8CAAiC,eAAe,SAAS;;;;;;;;;;;;sCAE1E,8OAAC;4BAAI,WAAU;;gCACZ,8BAAgB,8OAAC;oCAAI,WAAU;;;;;;8CAChC,8OAAC;oCAAI,WAAU;8CAAmC;;;;;;8CAClD,8OAAC;oCAAI,WAAU;8CAAiC,eAAe,OAAO;;;;;;;;;;;;sCAExE,8OAAC;4BAAI,WAAU;;gCACZ,8BAAgB,8OAAC;oCAAI,WAAU;;;;;;8CAChC,8OAAC;oCAAI,WAAU;8CAAsC;;;;;;8CACrD,8OAAC;oCAAI,WAAU;;wCAAiC,eAAe,WAAW,CAAC,OAAO,CAAC;wCAAG;;;;;;;;;;;;;sCAExF,8OAAC;4BAAI,WAAU;;gCACZ,8BAAgB,8OAAC;oCAAI,WAAU;;;;;;8CAChC,8OAAC;oCAAI,WAAU;8CAAsC;;;;;;8CACrD,8OAAC;oCAAI,WAAU;8CAAiC,eAAe,iBAAiB;;;;;;;;;;;;;;;;;;8BAKpF,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAChE,8OAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4CAC/C,WAAU;;8DAEV,8OAAC;oDAAO,OAAM;8DAAM;;;;;;8DACpB,8OAAC;oDAAO,OAAM;8DAAS;;;;;;8DACvB,8OAAC;oDAAO,OAAM;8DAAY;;;;;;8DAC1B,8OAAC;oDAAO,OAAM;8DAAS;;;;;;;;;;;;;;;;;;8CAG3B,8OAAC;;sDACC,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAChE,8OAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;4CACjD,WAAU;;8DAEV,8OAAC;oDAAO,OAAM;8DAAM;;;;;;8DACpB,8OAAC;oDAAO,OAAM;8DAAoB;;;;;;8DAClC,8OAAC;oDAAO,OAAM;8DAAc;;;;;;8DAC5B,8OAAC;oDAAO,OAAM;8DAAmB;;;;;;8DACjC,8OAAC;oDAAO,OAAM;8DAAe;;;;;;8DAC7B,8OAAC;oDAAO,OAAM;8DAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAOxC,8OAAC;oBAAI,WAAU;8BACZ,oBAAoB,GAAG,CAAC,CAAC,2BACxB,8OAAC;4BAAwB,WAAW,CAAC,8JAA8J,EACjM,eAAe,kBAAkB,IACjC;;gCAEC,8BACC,8OAAC;oCAAI,WAAU;;;;;;8CAIjB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAK,WAAU;kEACb,gBAAgB,WAAW,QAAQ;;;;;;;;;;;8DAGxC,8OAAC;;sEACC,8OAAC;4DAAG,WAAU;sEAAoC,WAAW,aAAa;;;;;;sEAC1E,8OAAC;4DAAE,WAAU;sEAAyB,WAAW,aAAa;;;;;;;;;;;;;;;;;;sDAGlE,8OAAC;4CAAI,WAAW,CAAC,8DAA8D,EAAE,eAAe,WAAW,MAAM,EAAE,uCAAuC,CAAC;;8DACzJ,8OAAC;8DAAM,WAAW,MAAM,CAAC,WAAW;;;;;;gDACnC,WAAW,kBAAkB,kBAAI,8OAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;;;;;;;;8CAKhE,8OAAC;oCAAG,WAAU;8CAA8C,WAAW,KAAK;;;;;;8CAG5E,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;8DAAK;;;;;;8DACN,8OAAC;oDAAK,WAAU;;wDACb,WAAW,gBAAgB;wDAAC;wDAAK,WAAW,YAAY;wDAAC;;;;;;;;;;;;;sDAG9D,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDACC,WAAW,CAAC,iBAAiB,EAAE,eAAe,WAAW,MAAM,EAAE,+CAA+C,EAC9G,eAAe,kBAAkB,IACjC;gDACF,OAAO;oDAAC,OAAO,GAAG,kBAAkB,WAAW,gBAAgB,EAAE,WAAW,YAAY,EAAE,CAAC,CAAC;gDAAA;;;;;;;;;;;;;;;;;8CAMlG,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;8DAChC,8OAAC;oDAAK,WAAW,GAAG,UAAU,WAAW,QAAQ,EAAE,WAAW,MAAM,IAAI,iBAAiB,iBAAiB;;wDACvG,WAAW,WAAW,QAAQ;wDAC9B,UAAU,WAAW,QAAQ,EAAE,WAAW,MAAM,KAAK;;;;;;;;;;;;;sDAG1D,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;8DAChC,8OAAC;oDAAK,WAAU;;wDAAiB,WAAW,YAAY;wDAAC;;;;;;;;;;;;;sDAE3D,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAgB;;;;;;8DAChC,8OAAC;oDAAK,WAAW,WAAW,kBAAkB,GAAG,mBAAmB;8DACjE,WAAW,kBAAkB,GAAG,kBAAkB;;;;;;;;;;;;;;;;;;8CAMzD,8OAAC;oCAAI,WAAU;;wCACZ,WAAW,MAAM,KAAK,0BACrB,8OAAC;4CACC,SAAS,IAAM,sBAAsB;4CACrC,WAAU;sDACX;;;;;;wCAIF,WAAW,MAAM,KAAK,6BACrB,8OAAC;4CACC,SAAS,IAAM,cAAc,WAAW,EAAE;4CAC1C,WAAU;sDACX;;;;;;sDAIH,8OAAC;4CAAO,WAAU;sDAAuI;;;;;;;;;;;;;2BAvFnJ,WAAW,EAAE;;;;;;;;;;gBAgG1B,oBAAoB,MAAM,KAAK,mBAC9B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAgB;;;;;;sCAC/B,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;gBAKhC,oCACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,8OAAC;gCAAE,WAAU;;oCAAqB;kDACT,8OAAC;wCAAK,WAAU;kDAAiB,mBAAmB,KAAK;;;;;;;;;;;;0CAElF,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAM,WAAU;;4CAA+C;4CACtC,mBAAmB,gBAAgB;4CAAC;;;;;;;kDAE9D,8OAAC;wCACC,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;wCACjD,KAAI;wCACJ,KAAI;wCACJ,aAAY;wCACZ,WAAU;;;;;;;;;;;;0CAGd,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS,IAAM,qBAAqB,mBAAmB,EAAE;wCACzD,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS;4CACP,sBAAsB;4CACtB,kBAAkB;wCACpB;wCACA,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB","debugId":null}},
    {"offset": {"line": 1471, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimberleycheung/CiviXchain/civicxchain-platform/frontend/app/page.tsx"],"sourcesContent":["/*'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport default function Home() {\n  const [posts, setPosts] = useState([]);\n  \n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900\">\n      {/* Cyberpunk Navigation *\n      <nav className=\"bg-black/40 backdrop-blur-xl border-b border-cyan-500/30 shadow-lg shadow-cyan-500/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-cyan-400 to-purple-400 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-black font-bold text-sm\">C</span>\n                </div>\n                <h1 className=\"text-2xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n                  CivicXChain\n                </h1>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button className=\"bg-cyan-500/20 hover:bg-cyan-500/30 border border-cyan-500/50 text-cyan-400 px-4 py-2 rounded-lg transition-all duration-300 hover:shadow-lg hover:shadow-cyan-500/25\">\n                Connect Wallet\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Hero Section *\n      <div className=\"relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500/10 via-transparent to-purple-500/10\"></div>\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\n          <div className=\"text-center\">\n            <h2 className=\"text-5xl font-bold text-white mb-4\">\n              The Future of \n              <span className=\"bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\"> Civic Accountability</span>\n            </h2>\n            <p className=\"text-xl text-gray-300 mb-8 max-w-3xl mx-auto\">\n              Where government officials and citizens unite through blockchain-verified environmental commitments. \n              Track progress, earn rewards, and build a sustainable future together.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Feed *\n      <div className=\"max-w-4xl mx-auto px-4 pb-12\">\n        {/* Create Commitment Section *\n        <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-6 mb-8 shadow-2xl\">\n          <h3 className=\"text-xl text-white mb-4 flex items-center\">\n            <span className=\"w-2 h-2 bg-cyan-400 rounded-full mr-3 animate-pulse\"></span>\n            What's your environmental commitment?\n          </h3>\n          <div className=\"space-y-4\">\n            <textarea \n              className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg p-4 text-white placeholder-gray-400 focus:border-cyan-400 focus:ring-1 focus:ring-cyan-400 transition-all\"\n              placeholder=\"I commit to reducing my city's carbon emissions by 25% within 12 months...\"\n              rows={3}\n            />\n            <div className=\"flex flex-wrap gap-3\">\n              <select className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\">\n                <option>üå≥ Forest Protection</option>\n                <option>üè≠ Air Quality</option>\n                <option>üíß Water Management</option>\n                <option>ü¶ã Biodiversity</option>\n                <option>‚ôªÔ∏è Waste Reduction</option>\n              </select>\n              <input \n                type=\"number\" \n                placeholder=\"Target %\" \n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white w-24 focus:border-cyan-400\"\n              />\n              <input \n                type=\"date\" \n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n              />\n            </div>\n            <button className=\"bg-gradient-to-r from-cyan-500 to-purple-500 hover:from-cyan-600 hover:to-purple-600 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-cyan-500/25\">\n              üöÄ Create Smart Commitment\n            </button>\n          </div>\n        </div>\n\n        {/* Sample Posts *\n        <div className=\"space-y-6\">\n          {/* Government Official Post *\n          <div className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-blue-500/20 p-6 hover:border-blue-500/40 transition-all duration-300 shadow-xl\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mr-4\">\n                <span className=\"text-white font-bold text-lg\">üèõÔ∏è</span>\n              </div>\n              <div>\n                <h3 className=\"text-white font-semibold flex items-center\">\n                  Mayor Sarah Johnson\n                  <span className=\"ml-2 bg-blue-500/20 text-blue-400 text-xs px-2 py-1 rounded-full border border-blue-500/30\">\n                    VERIFIED OFFICIAL\n                  </span>\n                </h3>\n                <p className=\"text-gray-400 text-sm\">Government Official ‚Ä¢ 2 hours ago</p>\n              </div>\n            </div>\n            \n            <p className=\"text-white mb-4 leading-relaxed\">\n              üéØ <strong>MAJOR COMMITMENT:</strong> Reducing our city's air pollution by 30% over the next 6 months! \n              New electric bus fleet rolling out next week. Real satellite data will track our progress. \n              <span className=\"text-cyan-400\">#CleanAirInitiative #CivicXChain</span>\n            </p>\n            \n            {/* Progress Bar *\n            <div className=\"bg-gradient-to-r from-green-500/20 to-cyan-500/20 rounded-lg p-4 mb-4 border border-green-500/20\">\n              <div className=\"flex justify-between text-sm text-green-400 mb-2\">\n                <span>üõ∞Ô∏è Satellite Verified Progress</span>\n                <span className=\"font-mono\">15% / 30%</span>\n              </div>\n              <div className=\"w-full bg-gray-800 rounded-full h-3 overflow-hidden\">\n                <div \n                  className=\"bg-gradient-to-r from-green-400 to-cyan-400 h-3 rounded-full transition-all duration-1000 shadow-lg shadow-green-400/30\" \n                  style={{width: '50%'}}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-400 mt-2\">‚è±Ô∏è 4 months remaining ‚Ä¢ üí∞ 50 ETH staked</p>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex space-x-6\">\n                <button className=\"flex items-center space-x-2 text-gray-400 hover:text-green-400 transition-colors\">\n                  <span>üëç</span>\n                  <span className=\"text-sm\">89 supports</span>\n                </button>\n                <button className=\"flex items-center space-x-2 text-gray-400 hover:text-blue-400 transition-colors\">\n                  <span>üí¨</span>\n                  <span className=\"text-sm\">23 comments</span>\n                </button>\n                <button className=\"flex items-center space-x-2 text-gray-400 hover:text-purple-400 transition-colors\">\n                  <span>üì§</span>\n                  <span className=\"text-sm\">Share</span>\n                </button>\n              </div>\n              <button className=\"bg-green-500/20 hover:bg-green-500/30 text-green-400 px-4 py-2 rounded-lg text-sm border border-green-500/30 transition-all\">\n                üëÄ Monitor Progress\n              </button>\n            </div>\n          </div>\n\n          {/* Citizen Post *\n          <div className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-purple-500/20 p-6 hover:border-purple-500/40 transition-all duration-300 shadow-xl\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center mr-4\">\n                <span className=\"text-white font-bold text-lg\">üå±</span>\n              </div>\n              <div>\n                <h3 className=\"text-white font-semibold flex items-center\">\n                  Alex Chen\n                  <span className=\"ml-2 bg-purple-500/20 text-purple-400 text-xs px-2 py-1 rounded-full border border-purple-500/30\">\n                    ECO CITIZEN\n                  </span>\n                </h3>\n                <p className=\"text-gray-400 text-sm\">Environmental Activist ‚Ä¢ 5 hours ago</p>\n              </div>\n            </div>\n            \n            <p className=\"text-white mb-4 leading-relaxed\">\n              üå≥ Just completed my personal commitment to plant 100 trees in my neighborhood! \n              Here's the proof from satellite imagery. Earned my first NFT badge! üèÜ\n              <span className=\"text-purple-400\">#TreePlanting #CivicXChain #PersonalCommitment</span>\n            </p>\n            \n            {/* Achievement Badge *\n            <div className=\"bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-lg p-4 mb-4 border border-purple-500/20\">\n              <div className=\"flex items-center\">\n                <div className=\"w-16 h-16 bg-gradient-to-r from-purple-400 to-pink-400 rounded-lg flex items-center justify-center mr-4\">\n                  <span className=\"text-2xl\">üèÜ</span>\n                </div>\n                <div>\n                  <h4 className=\"text-purple-400 font-semibold\">Forest Guardian Badge</h4>\n                  <p className=\"text-gray-400 text-sm\">NFT #1337 ‚Ä¢ Blockchain Verified</p>\n                  <p className=\"text-xs text-gray-500\">Achievement unlocked for planting 100+ trees</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex space-x-6\">\n                <button className=\"flex items-center space-x-2 text-gray-400 hover:text-purple-400 transition-colors\">\n                  <span>üëè</span>\n                  <span className=\"text-sm\">156 applause</span>\n                </button>\n                <button className=\"flex items-center space-x-2 text-gray-400 hover:text-blue-400 transition-colors\">\n                  <span>üí¨</span>\n                  <span className=\"text-sm\">34 comments</span>\n                </button>\n                <button className=\"flex items-center space-x-2 text-gray-400 hover:text-cyan-400 transition-colors\">\n                  <span>üîÑ</span>\n                  <span className=\"text-sm\">Repost</span>\n                </button>\n              </div>\n              <button className=\"bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 px-4 py-2 rounded-lg text-sm border border-purple-500/30 transition-all\">\n                üéâ Congratulate\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n  */\n\n/*'use client';\n\nimport { useState, useEffect } from 'react';\n\n// Types for the data structures\ninterface Commitment {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  current_progress: number;\n  deadline: string;\n  status: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n  created_at: string;\n  satellite_verified: boolean;\n}\n\ninterface EnvironmentalData {\n  location: string;\n  pm25: number;\n  co2: number;\n  forest_cover: number;\n  water_quality: number;\n  timestamp: string;\n  source: string;\n}\n\ninterface SatelliteData {\n  location: string;\n  forest_cover_percentage: number;\n  change_detected: boolean;\n  last_updated: string;\n  confidence_score: number;\n}\n\nexport default function Home() {\n  const [commitments, setCommitments] = useState<Commitment[]>([]);\n  const [environmentalData, setEnvironmentalData] = useState<EnvironmentalData | null>(null);\n  const [satelliteData, setSatelliteData] = useState<SatelliteData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Form state for creating new commitments\n  const [newCommitment, setNewCommitment] = useState({\n    title: '',\n    description: '',\n    category: 'forest_protection',\n    target_value: '',\n    deadline: '',\n    official_name: '',\n    official_role: '',\n    stake_amount: ''\n  });\n\n  const API_BASE_URL = process.env.NODE_ENV === 'development' \n    ? 'http://localhost:8000' \n    : 'https://your-production-api-url.com';\n\n  // Fetch all data on component mount\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n\n  const fetchAllData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch commitments\n      const commitmentsResponse = await fetch(`${API_BASE_URL}/commitments`);\n      if (commitmentsResponse.ok) {\n        const commitmentsData = await commitmentsResponse.json();\n        setCommitments(commitmentsData);\n      }\n\n      // Fetch environmental data\n      const envResponse = await fetch(`${API_BASE_URL}/environmental-data`);\n      if (envResponse.ok) {\n        const envData = await envResponse.json();\n        setEnvironmentalData(envData);\n      }\n\n      // Fetch satellite data\n      const satResponse = await fetch(`${API_BASE_URL}/satellite-data`);\n      if (satResponse.ok) {\n        const satData = await satResponse.json();\n        setSatelliteData(satData);\n      }\n\n    } catch (err) {\n      setError('Failed to fetch data. Please check your connection.');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateCommitment = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      const response = await fetch(`${API_BASE_URL}/commitments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...newCommitment,\n          target_value: parseFloat(newCommitment.target_value),\n          stake_amount: parseFloat(newCommitment.stake_amount)\n        }),\n      });\n\n      if (response.ok) {\n        const createdCommitment = await response.json();\n        setCommitments(prev => [createdCommitment, ...prev]);\n        \n        // Reset form\n        setNewCommitment({\n          title: '',\n          description: '',\n          category: 'forest_protection',\n          target_value: '',\n          deadline: '',\n          official_name: '',\n          official_role: '',\n          stake_amount: ''\n        });\n        \n        alert('Commitment created successfully!');\n      } else {\n        throw new Error('Failed to create commitment');\n      }\n    } catch (err) {\n      alert('Error creating commitment. Please try again.');\n      console.error('Error creating commitment:', err);\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    const icons: { [key: string]: string } = {\n      'forest_protection': 'üå≥',\n      'air_quality': 'üè≠',\n      'water_management': 'üíß',\n      'biodiversity': 'ü¶ã',\n      'waste_reduction': '‚ôªÔ∏è'\n    };\n    return icons[category] || 'üåç';\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const calculateProgress = (current: number, target: number) => {\n    return Math.min((current / target) * 100, 100);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-cyan-400 mx-auto mb-4\"></div>\n          <p className=\"text-white text-xl\">Loading CivicXChain...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900\">\n      {/* Cyberpunk Navigation *\n      <nav className=\"bg-black/40 backdrop-blur-xl border-b border-cyan-500/30 shadow-lg shadow-cyan-500/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-cyan-400 to-purple-400 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-black font-bold text-sm\">C</span>\n                </div>\n                <h1 className=\"text-2xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n                  CivicXChain\n                </h1>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button \n                onClick={fetchAllData}\n                className=\"bg-green-500/20 hover:bg-green-500/30 border border-green-500/50 text-green-400 px-4 py-2 rounded-lg transition-all duration-300 hover:shadow-lg hover:shadow-green-500/25\"\n              >\n                üîÑ Refresh Data\n              </button>\n              <button className=\"bg-cyan-500/20 hover:bg-cyan-500/30 border border-cyan-500/50 text-cyan-400 px-4 py-2 rounded-lg transition-all duration-300 hover:shadow-lg hover:shadow-cyan-500/25\">\n                Connect Wallet\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Error Message *\n      {error && (\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"bg-red-500/20 border border-red-500/50 text-red-400 px-4 py-3 rounded-lg\">\n            ‚ö†Ô∏è {error}\n          </div>\n        </div>\n      )}\n\n      {/* Hero Section *\n      <div className=\"relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500/10 via-transparent to-purple-500/10\"></div>\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\n          <div className=\"text-center\">\n            <h2 className=\"text-5xl font-bold text-white mb-4\">\n              The Future of \n              <span className=\"bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\"> Civic Accountability</span>\n            </h2>\n            <p className=\"text-xl text-gray-300 mb-8 max-w-3xl mx-auto\">\n              Where government officials and citizens unite through blockchain-verified environmental commitments. \n              Track progress, earn rewards, and build a sustainable future together.\n            </p>\n            \n            {/* Real-time Environmental Data Display *\n            {environmentalData && (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 max-w-4xl mx-auto mt-8\">\n                <div className=\"bg-black/30 backdrop-blur-xl rounded-lg p-4 border border-cyan-500/20\">\n                  <div className=\"text-cyan-400 text-sm\">PM2.5 Level</div>\n                  <div className=\"text-2xl font-bold text-white\">{environmentalData.pm25} Œºg/m¬≥</div>\n                </div>\n                <div className=\"bg-black/30 backdrop-blur-xl rounded-lg p-4 border border-green-500/20\">\n                  <div className=\"text-green-400 text-sm\">Forest Cover</div>\n                  <div className=\"text-2xl font-bold text-white\">{environmentalData.forest_cover}%</div>\n                </div>\n                <div className=\"bg-black/30 backdrop-blur-xl rounded-lg p-4 border border-blue-500/20\">\n                  <div className=\"text-blue-400 text-sm\">Water Quality</div>\n                  <div className=\"text-2xl font-bold text-white\">{environmentalData.water_quality}/100</div>\n                </div>\n                <div className=\"bg-black/30 backdrop-blur-xl rounded-lg p-4 border border-purple-500/20\">\n                  <div className=\"text-purple-400 text-sm\">CO2 Level</div>\n                  <div className=\"text-2xl font-bold text-white\">{environmentalData.co2} ppm</div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Feed *\n      <div className=\"max-w-4xl mx-auto px-4 pb-12\">\n        {/* Create Commitment Section *\n        <div className=\"bg-black/30 backdrop-blur-xl rounded-xl border border-cyan-500/20 p-6 mb-8 shadow-2xl\">\n          <h3 className=\"text-xl text-white mb-4 flex items-center\">\n            <span className=\"w-2 h-2 bg-cyan-400 rounded-full mr-3 animate-pulse\"></span>\n            Create Your Environmental Commitment\n          </h3>\n          \n          <form onSubmit={handleCreateCommitment} className=\"space-y-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Commitment title...\"\n              value={newCommitment.title}\n              onChange={(e) => setNewCommitment(prev => ({ ...prev, title: e.target.value }))}\n              className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg p-4 text-white placeholder-gray-400 focus:border-cyan-400 focus:ring-1 focus:ring-cyan-400 transition-all\"\n              required\n            />\n            \n            <textarea \n              placeholder=\"Detailed description of your commitment...\"\n              value={newCommitment.description}\n              onChange={(e) => setNewCommitment(prev => ({ ...prev, description: e.target.value }))}\n              className=\"w-full bg-black/50 border border-cyan-500/30 rounded-lg p-4 text-white placeholder-gray-400 focus:border-cyan-400 focus:ring-1 focus:ring-cyan-400 transition-all\"\n              rows={3}\n              required\n            />\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <select \n                value={newCommitment.category}\n                onChange={(e) => setNewCommitment(prev => ({ ...prev, category: e.target.value }))}\n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n              >\n                <option value=\"forest_protection\">üå≥ Forest Protection</option>\n                <option value=\"air_quality\">üè≠ Air Quality</option>\n                <option value=\"water_management\">üíß Water Management</option>\n                <option value=\"biodiversity\">ü¶ã Biodiversity</option>\n                <option value=\"waste_reduction\">‚ôªÔ∏è Waste Reduction</option>\n              </select>\n              \n              <input \n                type=\"number\" \n                placeholder=\"Target %\" \n                value={newCommitment.target_value}\n                onChange={(e) => setNewCommitment(prev => ({ ...prev, target_value: e.target.value }))}\n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n                required\n              />\n              \n              <input \n                type=\"date\" \n                value={newCommitment.deadline}\n                onChange={(e) => setNewCommitment(prev => ({ ...prev, deadline: e.target.value }))}\n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white focus:border-cyan-400\"\n                required\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Official Name\"\n                value={newCommitment.official_name}\n                onChange={(e) => setNewCommitment(prev => ({ ...prev, official_name: e.target.value }))}\n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:border-cyan-400\"\n                required\n              />\n              \n              <input\n                type=\"text\"\n                placeholder=\"Official Role\"\n                value={newCommitment.official_role}\n                onChange={(e) => setNewCommitment(prev => ({ ...prev, official_role: e.target.value }))}\n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:border-cyan-400\"\n                required\n              />\n              \n              <input\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Stake Amount (ETH)\"\n                value={newCommitment.stake_amount}\n                onChange={(e) => setNewCommitment(prev => ({ ...prev, stake_amount: e.target.value }))}\n                className=\"bg-black/50 border border-cyan-500/30 rounded-lg px-4 py-2 text-white placeholder-gray-400 focus:border-cyan-400\"\n                required\n              />\n            </div>\n            \n            <button \n              type=\"submit\"\n              className=\"w-full bg-gradient-to-r from-cyan-500 to-purple-500 hover:from-cyan-600 hover:to-purple-600 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-cyan-500/25\"\n            >\n              üöÄ Create Smart Commitment\n            </button>\n          </form>\n        </div>\n\n        {/* Satellite Data Section *\n        {satelliteData && (\n          <div className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-green-500/20 p-6 mb-8 shadow-xl\">\n            <h3 className=\"text-xl text-white mb-4 flex items-center\">\n              <span className=\"text-2xl mr-3\">üõ∞Ô∏è</span>\n              Live Satellite Monitoring\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <div className=\"text-green-400 text-sm\">Location</div>\n                <div className=\"text-white font-semibold\">{satelliteData.location}</div>\n              </div>\n              <div>\n                <div className=\"text-green-400 text-sm\">Forest Cover</div>\n                <div className=\"text-white font-semibold\">{satelliteData.forest_cover_percentage}%</div>\n              </div>\n              <div>\n                <div className=\"text-green-400 text-sm\">Confidence Score</div>\n                <div className=\"text-white font-semibold\">{satelliteData.confidence_score}%</div>\n              </div>\n            </div>\n            {satelliteData.change_detected && (\n              <div className=\"mt-4 bg-yellow-500/20 border border-yellow-500/50 text-yellow-400 px-4 py-2 rounded-lg\">\n                ‚ö†Ô∏è Environmental change detected! Last updated: {formatDate(satelliteData.last_updated)}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Commitments Feed *\n        <div className=\"space-y-6\">\n          {commitments.length === 0 ? (\n            <div className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-gray-500/20 p-12 text-center\">\n              <div className=\"text-6xl mb-4\">üå±</div>\n              <h3 className=\"text-white text-xl mb-2\">No commitments yet</h3>\n              <p className=\"text-gray-400\">Be the first to create an environmental commitment!</p>\n            </div>\n          ) : (\n            commitments.map((commitment) => (\n              <div key={commitment.id} className=\"bg-black/20 backdrop-blur-xl rounded-xl border border-blue-500/20 p-6 hover:border-blue-500/40 transition-all duration-300 shadow-xl\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mr-4\">\n                    <span className=\"text-white font-bold text-lg\">\n                      {getCategoryIcon(commitment.category)}\n                    </span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-white font-semibold flex items-center\">\n                      {commitment.official_name}\n                      <span className=\"ml-2 bg-blue-500/20 text-blue-400 text-xs px-2 py-1 rounded-full border border-blue-500/30\">\n                        {commitment.official_role}\n                      </span>\n                    </h3>\n                    <p className=\"text-gray-400 text-sm\">\n                      {formatDate(commitment.created_at)} ‚Ä¢ {commitment.category.replace('_', ' ').toUpperCase()}\n                    </p>\n                  </div>\n                </div>\n                \n                <h4 className=\"text-white font-semibold text-lg mb-2\">{commitment.title}</h4>\n                <p className=\"text-white mb-4 leading-relaxed\">{commitment.description}</p>\n                \n                {/* Progress Bar *\n                <div className=\"bg-gradient-to-r from-green-500/20 to-cyan-500/20 rounded-lg p-4 mb-4 border border-green-500/20\">\n                  <div className=\"flex justify-between text-sm text-green-400 mb-2\">\n                    <span>\n                      {commitment.satellite_verified ? 'üõ∞Ô∏è Satellite Verified' : 'üìä Self Reported'} Progress\n                    </span>\n                    <span className=\"font-mono\">\n                      {commitment.current_progress}% / {commitment.target_value}%\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-800 rounded-full h-3 overflow-hidden\">\n                    <div \n                      className=\"bg-gradient-to-r from-green-400 to-cyan-400 h-3 rounded-full transition-all duration-1000 shadow-lg shadow-green-400/30\" \n                      style={{width: `${calculateProgress(commitment.current_progress, commitment.target_value)}%`}}\n                    ></div>\n                  </div>\n                  <p className=\"text-xs text-gray-400 mt-2\">\n                    ‚è±Ô∏è Deadline: {formatDate(commitment.deadline)} ‚Ä¢ üí∞ {commitment.stake_amount} ETH staked\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex space-x-6\">\n                    <button className=\"flex items-center space-x-2 text-gray-400 hover:text-green-400 transition-colors\">\n                      <span>üëç</span>\n                      <span className=\"text-sm\">Support</span>\n                    </button>\n                    <button className=\"flex items-center space-x-2 text-gray-400 hover:text-blue-400 transition-colors\">\n                      <span>üí¨</span>\n                      <span className=\"text-sm\">Comment</span>\n                    </button>\n                    <button className=\"flex items-center space-x-2 text-gray-400 hover:text-purple-400 transition-colors\">\n                      <span>üì§</span>\n                      <span className=\"text-sm\">Share</span>\n                    </button>\n                  </div>\n                  <span className={`px-3 py-1 rounded-full text-xs font-semibold ${\n                    commitment.status === 'active' ? 'bg-green-500/20 text-green-400 border border-green-500/30' :\n                    commitment.status === 'completed' ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' :\n                    'bg-red-500/20 text-red-400 border border-red-500/30'\n                  }`}>\n                    {commitment.status.toUpperCase()}\n                  </span>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}*/\n\n\n/*\n'use client';\n\nimport { useState, useEffect } from 'react';\n\n// Types for the data structures\ninterface Commitment {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  current_progress: number;\n  deadline: string;\n  status: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n  created_at: string;\n  satellite_verified: boolean;\n}\n\ninterface EnvironmentalData {\n  location: string;\n  pm25: number;\n  co2: number;\n  forest_cover: number;\n  water_quality: number;\n  timestamp: string;\n  source: string;\n}\n\ninterface SatelliteData {\n  location: string;\n  forest_cover_percentage: number;\n  change_detected: boolean;\n  last_updated: string;\n  confidence_score: number;\n}\n\ninterface CreateCommitmentRequest {\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  deadline: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n}\n\nexport default function Home() {\n  const [commitments, setCommitments] = useState<Commitment[]>([]);\n  const [environmentalData, setEnvironmentalData] = useState<EnvironmentalData | null>(null);\n  const [satelliteData, setSatelliteData] = useState<SatelliteData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Form state for creating new commitments\n  const [newCommitment, setNewCommitment] = useState({\n    title: '',\n    description: '',\n    category: 'forest_protection',\n    target_value: '',\n    deadline: '',\n    official_name: '',\n    official_role: '',\n    stake_amount: ''\n  });\n\n  // Proper API configuration\n  const API_BASE_URL = process.env.NODE_ENV === 'development' \n    ? 'https://api.databutton.com/_projects/f4d95df8-c90d-4815-9705-a83827aa1133/dbtn/devx/app/routes'\n    : 'https://api.databutton.com/_projects/f4d95df8-c90d-4815-9705-a83827aa1133/dbtn/prodx/app/routes';\n\n  // Helper function for API calls with proper error handling\n  const apiCall = async (endpoint: string, options: RequestInit = {}) => {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      credentials: 'include', // Important for authentication\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`API Error: ${response.status} - ${errorText}`);\n    }\n\n    return response.json();\n  };\n\n  // Fetch all data on component mount\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n\n  const fetchAllData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch commitments with error handling\n      try {\n        const commitmentsData = await apiCall('/get_all_commitments');\n        setCommitments(commitmentsData.commitments || []);\n      } catch (err) {\n        console.error('Error fetching commitments:', err);\n        // Set mock data if API fails (for development)\n        setCommitments([]);\n      }\n\n      // Fetch environmental data with error handling\n      try {\n        const envData = await apiCall('/get_environmental_data');\n        setEnvironmentalData(envData);\n      } catch (err) {\n        console.error('Error fetching environmental data:', err);\n        // Set mock data if API fails\n        setEnvironmentalData({\n          location: \"Sample Location\",\n          pm25: 25.5,\n          co2: 410,\n          forest_cover: 75.2,\n          water_quality: 82,\n          timestamp: new Date().toISOString(),\n          source: \"Mock Data\"\n        });\n      }\n\n      // Fetch satellite data with error handling\n      try {\n        const satData = await apiCall('/get_satellite_data?commitmentId=general');\n        setSatelliteData(satData);\n      } catch (err) {\n        console.error('Error fetching satellite data:', err);\n        // Set mock data if API fails\n        setSatelliteData({\n          location: \"Sample Region\",\n          forest_cover_percentage: 78.5,\n          change_detected: false,\n          last_updated: new Date().toISOString(),\n          confidence_score: 94\n        });\n      }\n\n    } catch (err) {\n      setError('Failed to fetch data. Using demo mode.');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateCommitment = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      const commitmentData: CreateCommitmentRequest = {\n        title: newCommitment.title,\n        description: newCommitment.description,\n        category: newCommitment.category,\n        target_value: parseFloat(newCommitment.target_value),\n        deadline: newCommitment.deadline,\n        official_name: newCommitment.official_name,\n        official_role: newCommitment.official_role,\n        stake_amount: parseFloat(newCommitment.stake_amount)\n      };\n\n      const createdCommitment = await apiCall('/create_commitment', {\n        method: 'POST',\n        body: JSON.stringify(commitmentData),\n      });\n\n      setCommitments(prev => [createdCommitment, ...prev]);\n      \n      // Reset form\n      setNewCommitment({\n        title: '',\n        description: '',\n        category: 'forest_protection',\n        target_value: '',\n        deadline: '',\n        official_name: '',\n        official_role: '',\n        stake_amount: ''\n      });\n      \n      alert('Commitment created successfully!');\n\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Please try again.';\n      alert(`Error creating commitment: ${errorMessage}`);\n      console.error('Error creating commitment:', err);\n    }\n  };\n\n  // Rest of your component methods remain the same...\n  const getCategoryIcon = (category: string) => {\n    const icons: { [key: string]: string } = {\n      'forest_protection': 'üå≥',\n      'air_quality': 'üè≠',\n      'water_management': 'üíß',\n      'biodiversity': 'ü¶ã',\n      'waste_reduction': '‚ôªÔ∏è'\n    };\n    return icons[category] || 'üåç';\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const calculateProgress = (current: number, target: number) => {\n    return Math.min((current / target) * 100, 100);\n  };\n\n  // Your existing JSX return statement stays exactly the same...\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-cyan-400 mx-auto mb-4\"></div>\n          <p className=\"text-white text-xl\">Loading CivicXChain...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    // Your existing JSX remains exactly the same - just copy it from your current file\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900\">\n      {/* Keep all your existing JSX exactly as it is *\n      {/* Just replace the part above this comment *\n    </div>\n  );\n}\n*/\n\n\n\n\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport CommitmentDashboard from './components/CommitmentDashboard';\n\n// Types for the data structures\ninterface Commitment {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  current_progress: number;\n  deadline: string;\n  status: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n  created_at: string;\n  satellite_verified: boolean;\n}\n\ninterface EnvironmentalData {\n  location: string;\n  pm25: number;\n  co2: number;\n  forest_cover: number;\n  water_quality: number;\n  timestamp: string;\n  source: string;\n}\n\ninterface SatelliteData {\n  location: string;\n  forest_cover_percentage: number;\n  change_detected: boolean;\n  last_updated: string;\n  confidence_score: number;\n}\n\ninterface CreateCommitmentRequest {\n  title: string;\n  description: string;\n  category: string;\n  target_value: number;\n  deadline: string;\n  official_name: string;\n  official_role: string;\n  stake_amount: number;\n}\n\nexport default function Home() {\n  const [commitments, setCommitments] = useState<Commitment[]>([]);\n  const [environmentalData, setEnvironmentalData] = useState<EnvironmentalData | null>(null);\n  const [satelliteData, setSatelliteData] = useState<SatelliteData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentView, setCurrentView] = useState<'feed' | 'dashboard'>('feed');\n\n  const [newCommitment, setNewCommitment] = useState({\n    title: '',\n    description: '',\n    category: 'forest_protection',\n    target_value: '',\n    deadline: '',\n    official_name: '',\n    official_role: '',\n    stake_amount: ''\n  });\n\n  const API_BASE_URL = process.env.NODE_ENV === 'development'\n    ? 'https://api.databutton.com/_projects/f4d95df8-c90d-4815-9705-a83827aa1133/dbtn/devx/app/routes'\n    : 'https://api.databutton.com/_projects/f4d95df8-c90d-4815-9705-a83827aa1133/dbtn/prodx/app/routes';\n\n  const apiCall = async (endpoint: string, options: RequestInit = {}) => {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`API Error: ${response.status} - ${errorText}`);\n    }\n\n    return response.json();\n  };\n\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n\n  const fetchAllData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const commitmentsData = await apiCall('/get_all_commitments');\n        setCommitments(commitmentsData.commitments || []);\n      } catch (err) {\n        console.error('Error fetching commitments:', err);\n        setCommitments([]);\n      }\n\n      try {\n        const envData = await apiCall('/get_environmental_data');\n        setEnvironmentalData(envData);\n      } catch (err) {\n        console.error('Error fetching environmental data:', err);\n        setEnvironmentalData({\n          location: \"Sample Location\",\n          pm25: 25.5,\n          co2: 410,\n          forest_cover: 75.2,\n          water_quality: 82,\n          timestamp: new Date().toISOString(),\n          source: \"Mock Data\"\n        });\n      }\n\n      try {\n        const satData = await apiCall('/get_satellite_data?commitmentId=general');\n        setSatelliteData(satData);\n      } catch (err) {\n        console.error('Error fetching satellite data:', err);\n        setSatelliteData({\n          location: \"Sample Region\",\n          forest_cover_percentage: 78.5,\n          change_detected: false,\n          last_updated: new Date().toISOString(),\n          confidence_score: 94\n        });\n      }\n\n    } catch (err) {\n      setError('Failed to fetch data. Using demo mode.');\n      console.error('Error fetching data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateCommitment = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const commitmentData: CreateCommitmentRequest = {\n        title: newCommitment.title,\n        description: newCommitment.description,\n        category: newCommitment.category,\n        target_value: parseFloat(newCommitment.target_value),\n        deadline: newCommitment.deadline,\n        official_name: newCommitment.official_name,\n        official_role: newCommitment.official_role,\n        stake_amount: parseFloat(newCommitment.stake_amount)\n      };\n\n      const createdCommitment = await apiCall('/create_commitment', {\n        method: 'POST',\n        body: JSON.stringify(commitmentData),\n      });\n\n      setCommitments(prev => [createdCommitment, ...prev]);\n\n      setNewCommitment({\n        title: '',\n        description: '',\n        category: 'forest_protection',\n        target_value: '',\n        deadline: '',\n        official_name: '',\n        official_role: '',\n        stake_amount: ''\n      });\n\n      alert('Commitment created successfully!');\n\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Please try again.';\n      alert(`Error creating commitment: ${errorMessage}`);\n      console.error('Error creating commitment:', err);\n    }\n  };\n\n  const handleUpdateProgress = async (commitmentId: string, newProgress: number) => {\n    try {\n      const response = await apiCall('/update_commitment_progress', {\n        method: 'POST',\n        body: JSON.stringify({\n          commitment_id: commitmentId,\n          new_progress: newProgress\n        }),\n      });\n\n      setCommitments(prev => prev.map(c =>\n        c.id === commitmentId\n          ? { ...c, current_progress: newProgress }\n          : c\n      ));\n\n      alert('Progress updated successfully!');\n    } catch (err) {\n      alert('Error updating progress. Please try again.');\n      console.error('Error updating progress:', err);\n    }\n  };\n\n  const handleClaimReward = async (commitmentId: string) => {\n    try {\n      const response = await apiCall('/claim_reward', {\n        method: 'POST',\n        body: JSON.stringify({ commitment_id: commitmentId }),\n      });\n\n      alert('Reward claimed successfully!');\n    } catch (err) {\n      alert('Error claiming reward. Please try again.');\n      console.error('Error claiming reward:', err);\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    const icons: { [key: string]: string } = {\n      'forest_protection': 'üå≥',\n      'air_quality': 'üè≠',\n      'water_management': 'üíß',\n      'biodiversity': 'ü¶ã',\n      'waste_reduction': '‚ôªÔ∏è'\n    };\n    return icons[category] || 'üåç';\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const calculateProgress = (current: number, target: number) => {\n    return Math.min((current / target) * 100, 100);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-cyan-400 mx-auto mb-4\"></div>\n          <p className=\"text-white text-xl\">Loading CivicXChain...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 text-white p-6\">\n      <div className=\"flex items-center space-x-4 mb-6\">\n        <button\n          onClick={() => setCurrentView('feed')}\n          className={`px-4 py-2 rounded-lg transition-all duration-300 ${\n            currentView === 'feed'\n              ? 'bg-cyan-500/30 text-cyan-400 border border-cyan-500/50'\n              : 'text-gray-400 hover:text-cyan-400'\n          }`}\n        >\n          Feed\n        </button>\n        <button\n          onClick={() => setCurrentView('dashboard')}\n          className={`px-4 py-2 rounded-lg transition-all duration-300 ${\n            currentView === 'dashboard'\n              ? 'bg-cyan-500/30 text-cyan-400 border border-cyan-500/50'\n              : 'text-gray-400 hover:text-cyan-400'\n          }`}\n        >\n          Dashboard\n        </button>\n      </div>\n\n      {currentView === 'dashboard' ? (\n        <CommitmentDashboard\n          commitments={commitments}\n          onUpdateProgress={handleUpdateProgress}\n          onClaimReward={handleClaimReward}\n        />\n      ) : (\n        <div>\n          {/* Your existing feed JSX goes here ‚Äî e.g., map commitments, display environmental data, etc. */}\n          <p>üå± Feed content goes here (replace with your existing JSX)...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}