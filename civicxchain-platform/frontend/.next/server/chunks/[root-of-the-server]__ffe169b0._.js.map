{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimberleycheung/CiviXchain/civicxchain-platform/frontend/app/api/air-quality/route.ts"],"sourcesContent":["// app/api/air-quality/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const location = searchParams.get('location') || 'London';\n    \n    // OpenAQ API endpoint\n    const apiUrl = `https://api.openaq.org/v2/latest?location=${encodeURIComponent(location)}&parameter=pm25`;\n    \n    console.log('Fetching from:', apiUrl);\n    \n    const response = await fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'User-Agent': 'CivicXChain/1.0',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAQ API responded with status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Error fetching air quality data:', error);\n    return NextResponse.json(\n      { \n        error: 'Failed to fetch air quality data',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function OPTIONS() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  });\n}"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC,eAAe;QAEjD,sBAAsB;QACtB,MAAM,SAAS,CAAC,0CAA0C,EAAE,mBAAmB,UAAU,eAAe,CAAC;QAEzG,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,MAAM,WAAW,MAAM,MAAM,QAAQ;YACnC,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,cAAc;YAChB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,kCAAkC,EAAE,SAAS,MAAM,EAAE;QACxE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,OAAO;YACP,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpD,GACA;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,OAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS;YACP,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QAClC;IACF;AACF","debugId":null}}]
}