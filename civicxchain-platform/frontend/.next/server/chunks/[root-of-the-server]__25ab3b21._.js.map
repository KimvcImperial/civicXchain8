{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimberleycheung/CiviXchain/civicxchain-platform/frontend/app/api/commitments/route.ts"],"sourcesContent":["// app/api/commitments/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\n\n// Mock data for commitments - replace with your actual data source\nconst mockCommitments = [\n  {\n    id: 1,\n    title: \"Reduce Carbon Emissions\",\n    description: \"Commit to reducing carbon emissions by 50% by 2030\",\n    target: \"50% reduction\",\n    deadline: \"2030-12-31\",\n    status: \"active\"\n  },\n  {\n    id: 2,\n    title: \"Renewable Energy\",\n    description: \"Switch to 100% renewable energy sources\",\n    target: \"100% renewable\",\n    deadline: \"2025-12-31\",\n    status: \"in_progress\"\n  }\n];\n\nexport async function GET(request: NextRequest) {\n  try {\n    // If you have a database or external API for commitments, call it here\n    // For now, returning mock data\n    \n    console.log('Fetching commitments data');\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    return NextResponse.json({\n      success: true,\n      data: mockCommitments,\n      count: mockCommitments.length\n    });\n  } catch (error) {\n    console.error('Error fetching commitments:', error);\n    return NextResponse.json(\n      { \n        error: 'Failed to fetch commitments',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function OPTIONS() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  });\n}"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;;AAEA,mEAAmE;AACnE,MAAM,kBAAkB;IACtB;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,QAAQ;QACR,UAAU;QACV,QAAQ;IACV;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,QAAQ;QACR,UAAU;QACV,QAAQ;IACV;CACD;AAEM,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,uEAAuE;QACvE,+BAA+B;QAE/B,QAAQ,GAAG,CAAC;QAEZ,qBAAqB;QACrB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;YACN,OAAO,gBAAgB,MAAM;QAC/B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,OAAO;YACP,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpD,GACA;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,OAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS;YACP,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QAClC;IACF;AACF","debugId":null}}]
}