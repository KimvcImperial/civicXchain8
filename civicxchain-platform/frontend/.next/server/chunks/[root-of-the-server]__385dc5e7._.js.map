{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimberleycheung/Desktop/CiviXchain8/civicxchain-platform/frontend/app/api/blockchain/sync-commitment/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { commitmentId, data } = body;\n\n    console.log('üìù Syncing commitment to backend:', {\n      commitmentId,\n      data\n    });\n\n    // For now, just log the data and return success\n    // In a real implementation, this would save to a database\n    console.log('‚úÖ Commitment synced successfully');\n\n    return NextResponse.json({\n      success: true,\n      message: 'Commitment synced successfully',\n      commitmentId\n    });\n\n  } catch (error) {\n    console.error('‚ùå Error syncing commitment:', error);\n    return NextResponse.json(\n      { \n        success: false, \n        error: 'Failed to sync commitment' \n      },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG;QAE/B,QAAQ,GAAG,CAAC,qCAAqC;YAC/C;YACA;QACF;QAEA,gDAAgD;QAChD,0DAA0D;QAC1D,QAAQ,GAAG,CAAC;QAEZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;QACT,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}